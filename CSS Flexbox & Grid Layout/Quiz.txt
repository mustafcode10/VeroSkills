QUESTION 1 / 6
What is the correct CSS property to set up a Flexbox container?
display: flexbox;
display: flex;
container: flex;
flex: container;

Answer => display: flex;

QUESTION 2 / 6
Which statement correctly describes the difference between a flex container and flex items in CSS Flexbox?

Flex items are the parent elements, and flex containers are the child elements within a Flexbox layout.
Flex containers are the parent elements, and flex items are the child elements within a Flexbox layout.
Both flex items and flex containers are parent elements in a Flexbox layout.
Both flex items and flex containers are child elements in a Flexbox layout.

Answer => Flex containers are the parent elements, and flex items are the child elements within a Flexbox layout.

QUESTION 3 / 6
What does the justify-content property do in a Flexbox layout?

It defines the alignment of the flex items along the vertical axis.
It defines the alignment of the flex items along the main axis.
It defines the order of the flex items.
It defines the direction of the flex items.

Answer => It defines the alignment of the flex items along the main axis.

QUESTION 4 / 6
If you want to align flex items along the cross axis to the start of the container, which value would you use for align-items?

flex-start
flex-end
center
baseline

Answer => flex-start

QUESTION 5 / 6
What is the purpose of the align-self property in CSS Flexbox?


To set the flex-grow factor for a flex item.
To set the order in which flex items appear within the flex container.
To override the align-items property for specific flex items.
To specify the direction of the main axis in the flex container.

Answer => To override the align-items property for specific flex items.

QUESTION 6 / 6
How can one reverse the order of the items in a flex container?

order: reverse;
flex-direction: reverse-row;
align-items: reverse;
flex-direction: row-reverse;

Answer => flex-direction: row-reverse;

QUESTION 1 / 6
Which CSS property would you use to make a flex item take up the remaining space in a flex container?

flex-wrap: wrap;
flex-grow: 1;
flex-basis: auto;
gap: 10px;

Answer => flex-grow: 1;

QUESTION 2 / 6
If you want the flex items to lay out in rows, but move to a new line when space is insufficient, what would be the correct property setting?


flex-wrap: nowrap;
flex-wrap: reverse;
flex-grow: wrap;
flex-wrap: wrap;

Answer => flex-wrap: wrap;


QUESTION 3 / 6
You want to set the initial main size of a flex item to 200px. Which of the following properties would you use?



flex-basis: 200px;
flex-grow: 200px;
flex-wrap: 200px;
gap: 200px;

Answer => flex-basis: 200px;

QUESTION 4 / 6
You want to create a gap of 20px between flex items in a container. Which property would you use?


flex-grow: 20px;
flex-wrap: 20px;
flex-basis: 20px;
gap: 20px;

Answer => gap: 20px;


QUESTION 5 / 6
How would you center flex items both vertically and horizontally within a flex container?

justify-content: center; align-items: center;
justify-content: flex-start; align-items: flex-start;
justify-content: space-between; align-items: space-between;
justify-content: flex-end; align-items: flex-end;

Answer => justify-content: center; align-items: center;

QUESTION 6 / 6
When a margin is set to auto in a Flexbox layout, what does it do?

It removes the margin from the flex items.
It evenly distributes the space around the flex item.
It sets the margin to the default browser setting.
It prevents the flex item from wrapping.

Answer => It evenly distributes the space around the flex item.

QUESTION 1 / 5
1 What is the correct CSS property to set up a Grid container?
display: grid;
display: gridbox;
container: grid;
grid: container;

Answer => display: grid;

QUESTION 2 / 5
2 Which of the following CSS properties is used to define the size and number of columns in a grid layout?

grid-column-gap
grid-template-rows
grid-row-gap
grid-template-columns

Answer => grid-template-columns

QUESTION 3 / 5
2 To define three equally sized columns in a grid container, what would be the correct property setting?
grid-template-rows: 1fr 1fr 1fr;
grid-template-columns: 1fr 1fr 1fr;
grid-template-rows: 3fr;
grid-template-columns: 3fr;

Answer => grid-template-columns: 1fr 1fr 1fr;

QUESTION 4 / 5
4 You want to create a gap of 10px between grid items in a container. Which property would you use?
grid-gap: 10px;
grid-row-gap: 10px; grid-column-gap: 10px;
grid-template-rows: 10px; grid-template-columns: 10px;
Both A and B.

Answer => Both A and B.

QUESTION 5 / 5
5 Why is CSS Grid often referred to as a two-dimensional layout system?

It supports two different types of display: grid and inline-grid.
It allows for layout control along both rows and columns at the same time.
It can only be applied to two elements at a time.
It requires two CSS properties to be set: display: grid; and grid-template.

Answer => It allows for layout control along both rows and columns at the same time.

QUESTION 1 / 5
1 In a CSS Grid Layout, what is the implicit grid?

The grid defined using grid-template-rows and grid-template-columns properties.
The grid that is automatically created when you place items outside the explicit grid.
The grid that is created when you use auto-fit or auto-fill.
The grid that is created when you use repeat() function in your grid definition.

Answer => The grid that is automatically created when you place items outside the explicit grid.

QUESTION 2 / 5
2 What does the minmax() function do in a CSS Grid Layout?

It defines a size range greater than or equal to the min value and less than or equal to the max value.
It calculates the minimum and maximum values of the grid's dimensions.
It sets the minimum and maximum number of grid lines.
It sets the minimum and maximum number of grid items.

Answer => It defines a size range greater than or equal to the min value and less than or equal to the max value.

QUESTION 3 / 5
3 If you want to create a grid with 4 columns of equal width, which of the following properties would you use?

grid-template-columns: auto-fit(4, 1fr);
grid-template-columns: minmax(4, 1fr);
grid-template-columns: 4;
grid-template-columns: repeat(4, 1fr);

Answer => grid-template-columns: repeat(4, 1fr);

QUESTION 4 / 5
4 What does the auto-fit keyword do in a CSS Grid Layout?

It automatically adjusts the size of grid items to fit the container.
It automatically adjusts the number of grid items based on the size of the grid container.
It creates as many grid tracks as possible without overflowing the grid container.
It creates a grid track of automatic width to fit the remaining space.

Answer => It creates as many grid tracks as possible without overflowing the grid container.

QUESTION 5 / 5
5 You want to position a grid item starting from the second grid line to the fourth grid line. How would you do this?

grid-column: 2 / 4;
grid-row: 2 / 4;
grid-area: 2 / 4;
grid-template-columns: 2 / 4;

Answer =>  grid-column: 2 / 4;












